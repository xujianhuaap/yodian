apply plugin: 'checkstyle'
apply plugin: 'pmd'

//compileDebugJava.dependsOn 'check'
//check.dependsOn 'checkStyle', 'pmd'
check.dependsOn 'checkStyle'

task pmd(type: Pmd) {
    source fileTree('src')
    ruleSets = [
            'java-android',
            'java-basic',
            'java-empty',
//            'java-imports',
//            'java-strings'
//            'java-android',
//            'java-basic',
//            'java-braces',
//            'java-clone',
//            'java-codesize',
//            'java-comments',
//            'java-controversial',
//            'java-coupling',
//            'java-design',
//            'java-empty',
//            'java-finalizers',
//            'java-imports',
//            'java-j2ee',
//            'java-javabeans',
//            'java-junit',
//            'java-logging-jakarta-commons',
//            'java-logging-java',
//            'java-migrating',
//            'java-naming',
//            'java-optimizations',
//            'java-strictexception',
//            'java-strings',
//            'java-sunsecure',
//            'java-typeresolution',
//            'java-unnecessary',
//            'java-unusedcode'
    ]

    reports {
        xml.enabled = false
        html.enabled = true
    }
}

//task findbugs(type: FindBugs) {
//    ignoreFailures = true
//    classes = fileTree('build/intermediates/classes/debug')
//    source = fileTree('src')
//    classpath = files()
//    effort = 'max'
//    reports {
//        xml.enabled = false
//        html.enabled = true
//    }
//}


checkstyle {
    toolVersion '6.1.1'
    showViolations true
}
task checkStyle(type: Checkstyle) {
    configFile file(new File(rootProject.getRootDir(), "config/checkstyle/google_checks.xml"))
    source fileTree('src')
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/R.java'
    exclude '**/R.java'
    exclude 'maimeng/yodian/app/client/android/chat/**'
    classpath = files()
}